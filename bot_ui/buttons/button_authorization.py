import copy
import re
from telebot import types
from bot_start import bot
import mysql_handler
from bot_ui.markups.markup_for_registrants import markup_for_registrants
from bot_ui.markups.markup_register import markup_register
from bot_ui.markups.markup_main_menu import markup_main_menu as markupMainMenu
from check_is_back import check_is_back


def init_authorization():
    @bot.message_handler(func=lambda message: message.text == "–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è")
    def try_authorization(message):
        if check_is_back(message):
            return
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —Å–µ–π—á–∞—Å –í–∞—Å –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º! –í–≤–µ–¥–∏—Ç–µ –í–∞—à—É –ø–æ—á—Ç—É.',
                         reply_markup=markup_register)
        bot.register_next_step_handler(message, user_email)

    def user_email(message):
        if check_is_back(message):
            return
        if message.text is None or not re.search('[^@]+@[^@]+\.[^@]+', message.text):
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –í–∞—à—É –ø–æ—á—Ç—É –µ—â—ë —Ä–∞–∑.')
            bot.register_next_step_handler(message, user_email)
            return
        email = message.text.strip()
        cur = mysql_handler.connection.cursor()
        cur.execute('SELECT * FROM sellers WHERE email = %s', email)
        myresult = cur.fetchone()
        temp_markup = copy.deepcopy(markupMainMenu)
        temp_markup.row(types.KeyboardButton('–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è ü§ù'))
        temp_markup.row(types.KeyboardButton('–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è'))
        if myresult is None:
            bot.send_message(message.chat.id, '–ê–∫–∫–∞—É–Ω—Ç–∞ —Å —Ç–∞–∫–æ–π –ø–æ—á—Ç–æ–π –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.', reply_markup=temp_markup)
            return
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –í–∞—à –ø–∞—Ä–æ–ª—å.')
        bot.register_next_step_handler(message, user_pass, email)

    def user_pass(message, email):
        if check_is_back(message):
            return
        if message.text is None or not re.search('^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[A-Za-z\d]{8,}$', message.text):
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –µ—â—ë —Ä–∞–∑. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è - 8 —Å–∏–º–≤–æ–ª–æ–≤.'
                                              ' –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —á–∏—Å–ª–∞, –∞ —Ç–∞–∫–∂–µ –æ–¥–Ω—É –∑–∞–≥–ª–∞–≤–Ω—É—é –∏ '
                                              '–ø—Ä–æ–ø–∏—Å–Ω—É—é –±—É–∫–≤—É. –ü–∞—Ä–æ–ª—å –ù–ï –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ø–µ—Ü. —Å–∏–º–≤–æ–ª—ã(@,$,!,%,*,#,?,&)')
            bot.register_next_step_handler(message, user_pass, email)
            return
        password = message.text.strip()
        cur = mysql_handler.connection.cursor()
        cur.execute('SELECT * FROM sellers WHERE pass = %s and email = %s', (password, email))
        myresult = cur.fetchone()
        temp_markup = copy.deepcopy(markupMainMenu)
        if myresult is None:
            bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–∞ –ø–æ—á—Ç–∞ –∏–ª–∏ –ø–∞—Ä–æ–ª—å.', reply_markup=temp_markup)
            return
        bot.send_message(message.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å',
                         reply_markup=markup_for_registrants)
        cur.execute("UPDATE sellers SET user_id = %s WHERE email = %s", (message.from_user.id, email))
        mysql_handler.connection.commit()